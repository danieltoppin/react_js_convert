{"ast":null,"code":"import { useMotionValue, useInvertedScale } from \"framer-motion\";\nimport { useEffect } from \"react\";\n\n/**\n * Avoid the stretch/squashing of border radius by using inverting them\n * throughout the component's layout transition.\n *\n * It would be possible to animate to/from different radius, for instance\n * in mobile mode from rounded to square for full-screen panels, by passing\n * the calculated inverted transform to `layoutTransition` when set as a function.\n *\n * Those inverted scales could be provided here to act as a `from` value,\n * then we can use Popcorn's `mix` function to get our\n *\n * @param radius\n */\nexport function useInvertedBorderRadius(radius) {\n  var scaleX = useMotionValue(1);\n  var scaleY = useMotionValue(1);\n  var inverted = useInvertedScale({\n    scaleX: scaleX,\n    scaleY: scaleY\n  });\n  var borderRadius = useMotionValue(\"\".concat(radius, \"px\"));\n  useEffect(function () {\n    function updateRadius() {\n      var latestX = inverted.scaleX.get();\n      var latestY = inverted.scaleY.get();\n      var xRadius = latestX * radius + \"px\";\n      var yRadius = latestY * radius + \"px\";\n      borderRadius.set(\"\".concat(xRadius, \" \").concat(yRadius));\n    }\n    var unsubScaleX = inverted.scaleX.onChange(updateRadius);\n    var unsubScaleY = inverted.scaleY.onChange(updateRadius);\n    return function () {\n      unsubScaleX();\n      unsubScaleY();\n    };\n  }, [radius]);\n  return {\n    scaleX: scaleX,\n    scaleY: scaleY,\n    borderTopLeftRadius: borderRadius,\n    borderTopRightRadius: borderRadius,\n    borderBottomLeftRadius: borderRadius,\n    borderBottomRightRadius: borderRadius\n  };\n}","map":{"version":3,"names":["useMotionValue","useInvertedScale","useEffect","useInvertedBorderRadius","radius","scaleX","scaleY","inverted","borderRadius","updateRadius","latestX","get","latestY","xRadius","yRadius","set","unsubScaleX","onChange","unsubScaleY","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"],"sources":["/Users/gbdantop/Downloads/app-store-ui-using-react-and-framer-motion/src/utils/use-inverted-border-radius.ts"],"sourcesContent":["import { useMotionValue, useInvertedScale } from \"framer-motion\";\nimport { useEffect } from \"react\";\n\n/**\n * Avoid the stretch/squashing of border radius by using inverting them\n * throughout the component's layout transition.\n *\n * It would be possible to animate to/from different radius, for instance\n * in mobile mode from rounded to square for full-screen panels, by passing\n * the calculated inverted transform to `layoutTransition` when set as a function.\n *\n * Those inverted scales could be provided here to act as a `from` value,\n * then we can use Popcorn's `mix` function to get our\n *\n * @param radius\n */\nexport function useInvertedBorderRadius(radius: number) {\n  const scaleX = useMotionValue(1);\n  const scaleY = useMotionValue(1);\n  const inverted = useInvertedScale({ scaleX, scaleY });\n  const borderRadius = useMotionValue(`${radius}px`);\n\n  useEffect(() => {\n    function updateRadius() {\n      const latestX = inverted.scaleX.get();\n      const latestY = inverted.scaleY.get();\n      const xRadius = latestX * radius + \"px\";\n      const yRadius = latestY * radius + \"px\";\n\n      borderRadius.set(`${xRadius} ${yRadius}`);\n    }\n\n    const unsubScaleX = inverted.scaleX.onChange(updateRadius);\n    const unsubScaleY = inverted.scaleY.onChange(updateRadius);\n\n    return () => {\n      unsubScaleX();\n      unsubScaleY();\n    };\n  }, [radius]);\n\n  return {\n    scaleX,\n    scaleY,\n    borderTopLeftRadius: borderRadius,\n    borderTopRightRadius: borderRadius,\n    borderBottomLeftRadius: borderRadius,\n    borderBottomRightRadius: borderRadius\n  };\n}\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,gBAAgB,QAAQ,eAAe;AAChE,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,uBAAuB,CAACC,MAAc,EAAE;EACtD,IAAMC,MAAM,GAAGL,cAAc,CAAC,CAAC,CAAC;EAChC,IAAMM,MAAM,GAAGN,cAAc,CAAC,CAAC,CAAC;EAChC,IAAMO,QAAQ,GAAGN,gBAAgB,CAAC;IAAEI,MAAM,EAANA,MAAM;IAAEC,MAAM,EAANA;EAAO,CAAC,CAAC;EACrD,IAAME,YAAY,GAAGR,cAAc,WAAII,MAAM,QAAK;EAElDF,SAAS,CAAC,YAAM;IACd,SAASO,YAAY,GAAG;MACtB,IAAMC,OAAO,GAAGH,QAAQ,CAACF,MAAM,CAACM,GAAG,EAAE;MACrC,IAAMC,OAAO,GAAGL,QAAQ,CAACD,MAAM,CAACK,GAAG,EAAE;MACrC,IAAME,OAAO,GAAGH,OAAO,GAAGN,MAAM,GAAG,IAAI;MACvC,IAAMU,OAAO,GAAGF,OAAO,GAAGR,MAAM,GAAG,IAAI;MAEvCI,YAAY,CAACO,GAAG,WAAIF,OAAO,cAAIC,OAAO,EAAG;IAC3C;IAEA,IAAME,WAAW,GAAGT,QAAQ,CAACF,MAAM,CAACY,QAAQ,CAACR,YAAY,CAAC;IAC1D,IAAMS,WAAW,GAAGX,QAAQ,CAACD,MAAM,CAACW,QAAQ,CAACR,YAAY,CAAC;IAE1D,OAAO,YAAM;MACXO,WAAW,EAAE;MACbE,WAAW,EAAE;IACf,CAAC;EACH,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,OAAO;IACLC,MAAM,EAANA,MAAM;IACNC,MAAM,EAANA,MAAM;IACNa,mBAAmB,EAAEX,YAAY;IACjCY,oBAAoB,EAAEZ,YAAY;IAClCa,sBAAsB,EAAEb,YAAY;IACpCc,uBAAuB,EAAEd;EAC3B,CAAC;AACH"},"metadata":{},"sourceType":"module"}