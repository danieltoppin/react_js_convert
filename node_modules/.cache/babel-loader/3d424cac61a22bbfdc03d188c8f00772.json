{"ast":null,"code":"import { useDomEvent } from \"framer-motion\";\nimport { spring } from \"popmotion\";\nimport { mix } from \"@popmotion/popcorn\";\nimport { debounce } from \"lodash\";\n// Absolute distance a wheel scroll event can travel outside of\n// the defined constraints before we fire a \"snap back\" animation\nvar deltaThreshold = 5;\n\n// If wheel event fires beyond constraints, multiple the delta by this amount\nvar elasticFactor = 0.2;\nfunction springTo(value, from, to) {\n  if (value.isAnimating()) return;\n  value.start(function (complete) {\n    var animation = spring({\n      from: from,\n      to: to,\n      velocity: value.getVelocity(),\n      stiffness: 400,\n      damping: 40\n    }).start({\n      update: function update(v) {\n        return value.set(v);\n      },\n      complete: complete\n    });\n    return function () {\n      return animation.stop();\n    };\n  });\n}\nvar debouncedSpringTo = debounce(springTo, 100);\n\n/**\n * Re-implements wheel scroll for overlflow: hidden elements.\n *\n * Adds Apple Watch crown-style constraints, where the user\n * must continue to input wheel events of a certain delta at a certain\n * speed or the scrollable container will spring back to the nearest\n * constraint.\n *\n * Currently achieves this using event.deltaY and a debounce, which\n * feels pretty good during direct input but it'd be better to increase\n * the deltaY threshold during momentum scroll.\n *\n * TODOs before inclusion in Framer Motion:\n * - Detect momentum scroll and increase delta threshold before spring\n * - Remove padding hack\n * - Handle x-axis\n * - Perhaps handle arrow and space keyboard events?\n *\n * @param ref - Ref of the Element to attach listener to\n * @param y - MotionValue for the scrollable element - might be different to the Element\n * @param constraints - top/bottom scroll constraints in pixels.\n * @param isActive - `true` if this listener should fire.\n */\nexport function useWheelScroll(ref, y, constraints, onWheelCallback, isActive) {\n  var onWheel = function onWheel(event) {\n    event.preventDefault();\n    var currentY = y.get();\n    var newY = currentY - event.deltaY;\n    var startedAnimation = false;\n    var isWithinBounds = constraints && newY >= constraints.top && newY <= constraints.bottom;\n    if (constraints && !isWithinBounds) {\n      newY = mix(currentY, newY, elasticFactor);\n      if (newY < constraints.top) {\n        if (event.deltaY <= deltaThreshold) {\n          springTo(y, newY, constraints.top);\n          startedAnimation = true;\n        } else {\n          debouncedSpringTo(y, newY, constraints.top);\n        }\n      }\n      if (newY > constraints.bottom) {\n        if (event.deltaY >= -deltaThreshold) {\n          springTo(y, newY, constraints.bottom);\n          startedAnimation = true;\n        } else {\n          debouncedSpringTo(y, newY, constraints.bottom);\n        }\n      }\n    }\n    if (!startedAnimation) {\n      y.stop();\n      y.set(newY);\n    } else {\n      debouncedSpringTo.cancel();\n    }\n    onWheelCallback(event);\n  };\n  useDomEvent(ref, \"wheel\", isActive && onWheel, {\n    passive: false\n  });\n}","map":{"version":3,"names":["useDomEvent","spring","mix","debounce","deltaThreshold","elasticFactor","springTo","value","from","to","isAnimating","start","complete","animation","velocity","getVelocity","stiffness","damping","update","v","set","stop","debouncedSpringTo","useWheelScroll","ref","y","constraints","onWheelCallback","isActive","onWheel","event","preventDefault","currentY","get","newY","deltaY","startedAnimation","isWithinBounds","top","bottom","cancel","passive"],"sources":["/Users/gbdantop/Downloads/app-store-ui-using-react-and-framer-motion/src/utils/use-wheel-scroll.ts"],"sourcesContent":["import { RefObject } from \"react\";\nimport { useDomEvent, MotionValue } from \"framer-motion\";\nimport { spring } from \"popmotion\";\nimport { mix } from \"@popmotion/popcorn\";\nimport { debounce } from \"lodash\";\n\ninterface Constraints {\n  top: number;\n  bottom: number;\n}\n\n// Absolute distance a wheel scroll event can travel outside of\n// the defined constraints before we fire a \"snap back\" animation\nconst deltaThreshold = 5;\n\n// If wheel event fires beyond constraints, multiple the delta by this amount\nconst elasticFactor = 0.2;\n\nfunction springTo(value: MotionValue, from: number, to: number) {\n  if (value.isAnimating()) return;\n\n  value.start(complete => {\n    const animation = spring({\n      from,\n      to,\n      velocity: value.getVelocity(),\n      stiffness: 400,\n      damping: 40\n    }).start({\n      update: (v: number) => value.set(v),\n      complete\n    });\n\n    return () => animation.stop();\n  });\n}\n\nconst debouncedSpringTo = debounce(springTo, 100);\n\n/**\n * Re-implements wheel scroll for overlflow: hidden elements.\n *\n * Adds Apple Watch crown-style constraints, where the user\n * must continue to input wheel events of a certain delta at a certain\n * speed or the scrollable container will spring back to the nearest\n * constraint.\n *\n * Currently achieves this using event.deltaY and a debounce, which\n * feels pretty good during direct input but it'd be better to increase\n * the deltaY threshold during momentum scroll.\n *\n * TODOs before inclusion in Framer Motion:\n * - Detect momentum scroll and increase delta threshold before spring\n * - Remove padding hack\n * - Handle x-axis\n * - Perhaps handle arrow and space keyboard events?\n *\n * @param ref - Ref of the Element to attach listener to\n * @param y - MotionValue for the scrollable element - might be different to the Element\n * @param constraints - top/bottom scroll constraints in pixels.\n * @param isActive - `true` if this listener should fire.\n */\nexport function useWheelScroll(\n  ref: RefObject<Element>,\n  y: MotionValue<number>,\n  constraints: Constraints | null,\n  onWheelCallback: (e: WheelEvent) => void,\n  isActive: boolean\n) {\n  const onWheel = (event: WheelEvent) => {\n    event.preventDefault();\n\n    const currentY = y.get();\n    let newY = currentY - event.deltaY;\n    let startedAnimation = false;\n    const isWithinBounds =\n      constraints && newY >= constraints.top && newY <= constraints.bottom;\n\n    if (constraints && !isWithinBounds) {\n      newY = mix(currentY, newY, elasticFactor);\n\n      if (newY < constraints.top) {\n        if (event.deltaY <= deltaThreshold) {\n          springTo(y, newY, constraints.top);\n          startedAnimation = true;\n        } else {\n          debouncedSpringTo(y, newY, constraints.top);\n        }\n      }\n\n      if (newY > constraints.bottom) {\n        if (event.deltaY >= -deltaThreshold) {\n          springTo(y, newY, constraints.bottom);\n          startedAnimation = true;\n        } else {\n          debouncedSpringTo(y, newY, constraints.bottom);\n        }\n      }\n    }\n\n    if (!startedAnimation) {\n      y.stop();\n      y.set(newY);\n    } else {\n      debouncedSpringTo.cancel();\n    }\n\n    onWheelCallback(event);\n  };\n\n  useDomEvent(ref, \"wheel\", isActive && onWheel, { passive: false });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}