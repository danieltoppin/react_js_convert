{"ast":null,"code":"import _objectSpread from \"/Users/gbdantop/Downloads/app-store-ui-using-react-and-framer-motion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _this = this,\n  _jsxFileName = \"/Users/gbdantop/Downloads/app-store-ui-using-react-and-framer-motion/src/Card/index.tsx\";\nimport * as React from \"react\";\nimport { memo, useRef } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { useInvertedBorderRadius } from \"../utils/use-inverted-border-radius\";\nimport { ContentPlaceholder } from \"./ContentPlaceholder\";\nimport { Title } from \"./Title\";\nimport { Image } from \"./Image\";\nimport { openSpring, closeSpring } from \"./animations\";\nimport { useScrollConstraints } from \"../utils/use-scroll-constraints\";\nimport { useWheelScroll } from \"../utils/use-wheel-scroll\";\n// Distance in pixels a user has to scroll a card down before we recognise\n// a swipe-to dismiss action.\nvar dismissDistance = 150;\nexport var Card = memo(function (_ref) {\n  var isSelected = _ref.isSelected,\n    id = _ref.id,\n    title = _ref.title,\n    category = _ref.category,\n    history = _ref.history,\n    pointOfInterest = _ref.pointOfInterest,\n    backgroundColor = _ref.backgroundColor;\n  var y = useMotionValue(0);\n  var zIndex = useMotionValue(isSelected ? 2 : 0);\n\n  // Maintain the visual border radius when we perform the layoutTransition by inverting its scaleX/Y\n  var inverted = useInvertedBorderRadius(20);\n\n  // We'll use the opened card element to calculate the scroll constraints\n  var cardRef = useRef(null);\n  var constraints = useScrollConstraints(cardRef, isSelected);\n  function checkSwipeToDismiss() {\n    y.get() > dismissDistance && history.push(\"/\");\n  }\n\n  // function checkZIndex(latest) {\n  //   if (isSelected) {\n  //     zIndex.set(2);\n  //   } else if (!isSelected && latest.scaleX < 1.01) {\n  //     zIndex.set(0);\n  //   }\n  // }\n\n  // When this card is selected, attach a wheel event listener\n  var containerRef = useRef(null);\n  useWheelScroll(containerRef, y, constraints, checkSwipeToDismiss, isSelected);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: containerRef,\n    className: \"card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Overlay, {\n    isSelected: isSelected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-container \".concat(isSelected && \"open\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(motion.div, {\n    ref: cardRef,\n    className: \"card-content\",\n    style: _objectSpread({}, inverted, {\n      zIndex: zIndex,\n      y: y\n    }),\n    layoutTransition: isSelected ? openSpring : closeSpring,\n    drag: isSelected ? \"y\" : false,\n    dragConstraints: constraints,\n    onDrag: checkSwipeToDismiss\n    //onUpdate={checkZIndex}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Image\n  //id={id}\n  // isSelected={isSelected}\n  // pointOfInterest={pointOfInterest}\n  // backgroundColor={backgroundColor}\n  , {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    title: title,\n    category: category,\n    isSelected: isSelected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ContentPlaceholder, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }))), !isSelected && /*#__PURE__*/React.createElement(Link, {\n    to: id,\n    className: \"card-open-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }));\n}, function (prev, next) {\n  return prev.isSelected === next.isSelected;\n});\nvar Overlay = function Overlay(_ref2) {\n  var isSelected = _ref2.isSelected;\n  return /*#__PURE__*/React.createElement(motion.div, {\n    initial: false,\n    animate: {\n      opacity: isSelected ? 1 : 0\n    },\n    transition: {\n      duration: 0.2\n    },\n    style: {\n      pointerEvents: isSelected ? \"auto\" : \"none\"\n    },\n    className: \"overlay\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"names":["React","memo","useRef","motion","useMotionValue","Link","useInvertedBorderRadius","ContentPlaceholder","Title","Image","openSpring","closeSpring","useScrollConstraints","useWheelScroll","dismissDistance","Card","isSelected","id","title","category","history","pointOfInterest","backgroundColor","y","zIndex","inverted","cardRef","constraints","checkSwipeToDismiss","get","push","containerRef","prev","next","Overlay","opacity","duration","pointerEvents"],"sources":["/Users/gbdantop/Downloads/app-store-ui-using-react-and-framer-motion/src/Card/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { memo, useRef } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { useInvertedBorderRadius } from \"../utils/use-inverted-border-radius\";\nimport { CardData } from \"../types\";\nimport { ContentPlaceholder } from \"./ContentPlaceholder\";\nimport { Title } from \"./Title\";\nimport { Image } from \"./Image\";\nimport { openSpring, closeSpring } from \"./animations\";\nimport { useScrollConstraints } from \"../utils/use-scroll-constraints\";\nimport { useWheelScroll } from \"../utils/use-wheel-scroll\";\n\ninterface Props extends CardData {\n  isSelected: boolean;\n  history: {\n    push: (route: string) => void;\n  };\n}\n\n// Distance in pixels a user has to scroll a card down before we recognise\n// a swipe-to dismiss action.\nconst dismissDistance = 150;\n\nexport const Card = memo(\n  ({\n    isSelected,\n    id,\n    title,\n    category,\n    history,\n    pointOfInterest,\n    backgroundColor\n  }: Props) => {\n    const y = useMotionValue(0);\n    const zIndex = useMotionValue(isSelected ? 2 : 0);\n\n    // Maintain the visual border radius when we perform the layoutTransition by inverting its scaleX/Y\n    const inverted = useInvertedBorderRadius(20);\n\n    // We'll use the opened card element to calculate the scroll constraints\n    const cardRef = useRef(null);\n    const constraints = useScrollConstraints(cardRef, isSelected);\n\n    function checkSwipeToDismiss() {\n      y.get() > dismissDistance && history.push(\"/\");\n    }\n\n    // function checkZIndex(latest) {\n    //   if (isSelected) {\n    //     zIndex.set(2);\n    //   } else if (!isSelected && latest.scaleX < 1.01) {\n    //     zIndex.set(0);\n    //   }\n    // }\n\n    // When this card is selected, attach a wheel event listener\n    const containerRef = useRef(null);\n    useWheelScroll(\n      containerRef,\n      y,\n      constraints,\n      checkSwipeToDismiss,\n      isSelected\n    );\n\n    return (\n      <li ref={containerRef} className={`card`}>\n        <Overlay isSelected={isSelected} />\n        <div className={`card-content-container ${isSelected && \"open\"}`}>\n          <motion.div\n            ref={cardRef}\n            className=\"card-content\"\n            style={{ ...inverted, zIndex, y }}\n            layoutTransition={isSelected ? openSpring : closeSpring}\n            drag={isSelected ? \"y\" : false}\n            dragConstraints={constraints}\n            onDrag={checkSwipeToDismiss}\n            //onUpdate={checkZIndex}\n          >\n            <Image\n              //id={id}\n              // isSelected={isSelected}\n              // pointOfInterest={pointOfInterest}\n              // backgroundColor={backgroundColor}\n            />\n            <Title title={title} category={category} isSelected={isSelected} />\n            <ContentPlaceholder />\n          </motion.div>\n        </div>\n        {!isSelected && <Link to={id} className={`card-open-link`} />}\n      </li>\n    );\n  },\n  (prev, next) => prev.isSelected === next.isSelected\n);\n\nconst Overlay = ({ isSelected }) => (\n  <motion.div\n    initial={false}\n    animate={{ opacity: isSelected ? 1 : 0 }}\n    transition={{ duration: 0.2 }}\n    style={{ pointerEvents: isSelected ? \"auto\" : \"none\" }}\n    className=\"overlay\"\n  >\n    <Link to=\"/\" />\n  </motion.div>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}